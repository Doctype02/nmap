# Styrene config file for Zenmap and Ndiff

[bundle]

# Packages to install into the bundle, separated by spaces.
# Pacman will resolve dependencies automatically.
# Substs: {pkg_prefix} for "mingw-w64-x86_64-" or "mingw-w64-i686-".
# The first package is the main one: it provides the default metadata.
packages = {pkg_prefix}python-zenmap {pkg_prefix}python-gobject {pkg_prefix}python {pkg_prefix}gtk3 msys2-runtime

# Reduce some bundling time and size by skipping these prereqs we don't use
assume_installed = {pkg_prefix}ncurses {pkg_prefix}expat {pkg_prefix}openssl {pkg_prefix}tcl {pkg_prefix}tk

# The first part of generated installer or archive filenames.
# Will be suffixed with the version, an architecture spec
# like "-w64" or "-w32", and the appropriate filename extension.
# Default: the main package's name (with {pkg_prefix} as "").
filename_stub = zenmap

# Display name for the bundle. Spaces are OK.
# The suffix " (w32)" is appended for MINGW32 bundles.
# Default: the filename stub
display_name = Zenmap

# Short human-readable description.
description = Nmap GUI

# Version number for the bundle.
# Default: parsed from the main package's version.
# version =

# URLs that default to the main package's URL metadata.
# url =

# Launchers to install.
# Entries here should name a desktop file,
# or an equivalent section below.
launchers =
	zenmap.desktop

# Additional icons to explicitly convert.
# These will be converted from the bundle's FreeDesktop.org PNG icons.
# They are used in addition to the ones listed in the launchers.
# The conversion only knows about Adwaita & the default hicolor theme.
# The first converted icon will be used for the installer too [VOLATILE]
; icons =

# Surplus files and folders to be deleted.
# Space-separated list of glob patterns rooted in $INSTDIR.

delete = *


# List files and directories you *don't* want to be deleted here.
# If you're cleaning out $PREFIX/bin, you need to keep all the EXEs
# which are called from the postinst.cmd.

nodelete =
    # The postinst scripts that GTK needs, followed by their binaries.
    mingw*/share/glib*/schemas

    mingw*/bin/gtk-update-icon-cache*.exe
    usr/bin/mkdir.exe
    usr/bin/msys-2*.dll
    usr/share/libalpm

    var/lib/pacman/local/mingw-w64-*-hicolor-icon-theme-*-*/install

    # Runtime requirements for the demos etc.
    mingw*/etc/gtk-3.0
    mingw*/bin/*.dll

    mingw*/lib/gtk-3.0
    mingw*/lib/gdk-pixbuf-2.0


    mingw*/share/icons/hicolor/index.theme

    # python-gobject stuff
    mingw*/lib/girepository-*
    mingw*/lib/python3.*
    # To avoid terminal window, use pythonw.exe
    mingw*/bin/pythonw.exe
    # For debugging use python.exe
    #mingw*/bin/python.exe
    mingw*/bin/libpython*.dll
    # Zenmap's files (mostly in site-packages above)
    mingw*/share/zenmap
    # mingw*/bin/zenmap

# Local launcher definitions

; You can define new app launchers here, or extend the launchers in
; installed .desktop files by overriding their keys.
;
; All launchers need to be listed in the [bundle]'s "launchers" key.
[zenmap.desktop]
exec = pythonw.exe -c 'from zenmapGUI.App import run; run()'
icon = {msystem_subdir}/share/zenmap/pixmaps/zenmap.png
; For debugging:
;Terminal = true
;exec = python.exe -c 'from zenmapGUI.App import run; run()' -vvvvv
